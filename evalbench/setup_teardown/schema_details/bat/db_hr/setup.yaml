setup_commands:
  excluded_columns:
    postgres: []
    mysql: []
  pre_setup:
    postgres:
    - "SET statement_timeout = 0;"
    - "SET lock_timeout = 0;"
    - "SET idle_in_transaction_session_timeout = 0;"
    - "SET client_encoding = 'UTF8';"
    - "SET standard_conforming_strings = on;"
    - "SELECT pg_catalog.set_config('search_path', '', false);"
    - "SET check_function_bodies = false;"
    - "SET xmloption = content;"
    - "SET client_min_messages = warning;"
    - "SET row_security = off;"
    - "SET default_tablespace = '';"
    - "SET default_table_access_method = heap;"
    mysql: []
  post_schema_creation:
    postgres:
    - "ALTER TABLE public.allowances OWNER TO nl2sql;"
    - "CREATE SEQUENCE public.allowances_allowance_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;"
    - "ALTER TABLE public.allowances_allowance_id_seq OWNER TO nl2sql;"
    - "ALTER SEQUENCE public.allowances_allowance_id_seq OWNED BY public.allowances.allowance_id;"
    - "ALTER TABLE public.attendance OWNER TO nl2sql;"
    - "CREATE SEQUENCE public.attendance_attendance_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;"
    - "ALTER TABLE public.attendance_attendance_id_seq OWNER TO nl2sql;"
    - "ALTER SEQUENCE public.attendance_attendance_id_seq OWNED BY public.attendance.attendance_id;"
    - "ALTER TABLE public.benefit OWNER TO nl2sql;"
    - "CREATE SEQUENCE public.benefit_benefit_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;"
    - "ALTER TABLE public.benefit_benefit_id_seq OWNER TO nl2sql;"
    - "ALTER SEQUENCE public.benefit_benefit_id_seq OWNED BY public.benefit.benefit_id;"
    - "ALTER TABLE public.company OWNER TO nl2sql;"
    - "CREATE SEQUENCE public.company_company_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;"
    - "ALTER TABLE public.company_company_id_seq OWNER TO nl2sql;"
    - "ALTER SEQUENCE public.company_company_id_seq OWNED BY public.company.company_id;"
    - "ALTER TABLE public.department OWNER TO nl2sql;"
    - "CREATE SEQUENCE public.department_department_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;"
    - "ALTER TABLE public.department_department_id_seq OWNER TO nl2sql;"
    - "ALTER SEQUENCE public.department_department_id_seq OWNED BY public.department.department_id;"
    - "ALTER TABLE public.employee OWNER TO nl2sql;"
    - "ALTER TABLE public.employee_allowances OWNER TO nl2sql;"
    - "CREATE SEQUENCE public.employee_allowances_employee_allowance_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;"
    - "ALTER TABLE public.employee_allowances_employee_allowance_id_seq OWNER TO nl2sql;"
    - "ALTER SEQUENCE public.employee_allowances_employee_allowance_id_seq OWNED BY public.employee_allowances.employee_allowance_id;"
    - "ALTER TABLE public.employee_business_expense OWNER TO nl2sql;"
    - "CREATE SEQUENCE public.employee_business_expense_expense_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;"
    - "ALTER TABLE public.employee_business_expense_expense_id_seq OWNER TO nl2sql;"
    - "ALTER SEQUENCE public.employee_business_expense_expense_id_seq OWNED BY public.employee_business_expense.expense_id;"
    - "ALTER TABLE public.employee_certification OWNER TO nl2sql;"
    - "CREATE SEQUENCE public.employee_certification_certification_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;"
    - "ALTER TABLE public.employee_certification_certification_id_seq OWNER TO nl2sql;"
    - "ALTER SEQUENCE public.employee_certification_certification_id_seq OWNED BY public.employee_certification.certification_id;"
    - "ALTER TABLE public.employee_computer OWNER TO nl2sql;"
    - "CREATE SEQUENCE public.employee_computer_computer_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;"
    - "ALTER TABLE public.employee_computer_computer_id_seq OWNER TO nl2sql;"
    - "ALTER SEQUENCE public.employee_computer_computer_id_seq OWNED BY public.employee_computer.computer_id;"
    - "CREATE SEQUENCE public.employee_employee_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;"
    - "ALTER TABLE public.employee_employee_id_seq OWNER TO nl2sql;"
    - "ALTER SEQUENCE public.employee_employee_id_seq OWNED BY public.employee.employee_id;"
    - "ALTER TABLE public.employee_termination OWNER TO nl2sql;"
    - "CREATE SEQUENCE public.employee_termination_termination_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;"
    - "ALTER TABLE public.employee_termination_termination_id_seq OWNER TO nl2sql;"
    - "ALTER SEQUENCE public.employee_termination_termination_id_seq OWNED BY public.employee_termination.termination_id;"
    - "ALTER TABLE public.employee_training OWNER TO nl2sql;"
    - "ALTER TABLE public.employee_travel OWNER TO nl2sql;"
    - "CREATE SEQUENCE public.employee_travel_travel_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;"
    - "ALTER TABLE public.employee_travel_travel_id_seq OWNER TO nl2sql;"
    - "ALTER SEQUENCE public.employee_travel_travel_id_seq OWNED BY public.employee_travel.travel_id;"
    - "ALTER TABLE public.employee_x_benefit OWNER TO nl2sql;"
    - "ALTER TABLE public.holiday OWNER TO nl2sql;"
    - "ALTER TABLE public.invoice OWNER TO nl2sql;"
    - "CREATE SEQUENCE public.invoice_invoice_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;"
    - "ALTER TABLE public.invoice_invoice_id_seq OWNER TO nl2sql;"
    - "ALTER SEQUENCE public.invoice_invoice_id_seq OWNED BY public.invoice.invoice_id;"
    - "ALTER TABLE public.job OWNER TO nl2sql;"
    - "ALTER TABLE public.job_history OWNER TO nl2sql;"
    - "CREATE SEQUENCE public.job_history_job_history_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;"
    - "ALTER TABLE public.job_history_job_history_id_seq OWNER TO nl2sql;"
    - "ALTER SEQUENCE public.job_history_job_history_id_seq OWNED BY public.job_history.job_history_id;"
    - "CREATE SEQUENCE public.job_job_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;"
    - "ALTER TABLE public.job_job_id_seq OWNER TO nl2sql;"
    - "ALTER SEQUENCE public.job_job_id_seq OWNED BY public.job.job_id;"
    - "ALTER TABLE public.leave_request OWNER TO nl2sql;"
    - "CREATE SEQUENCE public.leave_request_leave_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;"
    - "ALTER TABLE public.leave_request_leave_id_seq OWNER TO nl2sql;"
    - "ALTER SEQUENCE public.leave_request_leave_id_seq OWNED BY public.leave_request.leave_id;"
    - "ALTER TABLE public.manager OWNER TO nl2sql;"
    - "CREATE SEQUENCE public.manager_manager_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;"
    - "ALTER TABLE public.manager_manager_id_seq OWNER TO nl2sql;"
    - "ALTER SEQUENCE public.manager_manager_id_seq OWNED BY public.manager.manager_id;"
    - "ALTER TABLE public.payment OWNER TO nl2sql;"
    - "CREATE SEQUENCE public.payment_payment_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;"
    - "ALTER TABLE public.payment_payment_id_seq OWNER TO nl2sql;"
    - "ALTER SEQUENCE public.payment_payment_id_seq OWNED BY public.payment.payment_id;"
    - "ALTER TABLE public.performance_review OWNER TO nl2sql;"
    - "CREATE SEQUENCE public.performance_review_review_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;"
    - "ALTER TABLE public.performance_review_review_id_seq OWNER TO nl2sql;"
    - "ALTER SEQUENCE public.performance_review_review_id_seq OWNED BY public.performance_review.review_id;"
    - "ALTER TABLE public.salary OWNER TO nl2sql;"
    - "CREATE SEQUENCE public.salary_salary_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;"
    - "ALTER TABLE public.salary_salary_id_seq OWNER TO nl2sql;"
    - "ALTER SEQUENCE public.salary_salary_id_seq OWNED BY public.salary.salary_id;"
    - "ALTER TABLE public.timesheet OWNER TO nl2sql;"
    - "ALTER TABLE public.timesheet_employee OWNER TO nl2sql;"
    - "CREATE SEQUENCE public.timesheet_timesheet_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;"
    - "ALTER TABLE public.timesheet_timesheet_id_seq OWNER TO nl2sql;"
    - "ALTER SEQUENCE public.timesheet_timesheet_id_seq OWNED BY public.timesheet.timesheet_id;"
    - "ALTER TABLE public.training OWNER TO nl2sql;"
    - "CREATE SEQUENCE public.training_training_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;"
    - "ALTER TABLE public.training_training_id_seq OWNER TO nl2sql;"
    - "ALTER SEQUENCE public.training_training_id_seq OWNED BY public.training.training_id;"
    - "ALTER TABLE ONLY public.allowances ALTER COLUMN allowance_id SET DEFAULT nextval('public.allowances_allowance_id_seq'::regclass);"
    - "ALTER TABLE ONLY public.attendance ALTER COLUMN attendance_id SET DEFAULT nextval('public.attendance_attendance_id_seq'::regclass);"
    - "ALTER TABLE ONLY public.benefit ALTER COLUMN benefit_id SET DEFAULT nextval('public.benefit_benefit_id_seq'::regclass);"
    - "ALTER TABLE ONLY public.company ALTER COLUMN company_id SET DEFAULT nextval('public.company_company_id_seq'::regclass);"
    - "ALTER TABLE ONLY public.department ALTER COLUMN department_id SET DEFAULT nextval('public.department_department_id_seq'::regclass);"
    - "ALTER TABLE ONLY public.employee ALTER COLUMN employee_id SET DEFAULT nextval('public.employee_employee_id_seq'::regclass);"
    - "ALTER TABLE ONLY public.employee_allowances ALTER COLUMN employee_allowance_id SET DEFAULT nextval('public.employee_allowances_employee_allowance_id_seq'::regclass);"
    - "ALTER TABLE ONLY public.employee_business_expense ALTER COLUMN expense_id SET DEFAULT nextval('public.employee_business_expense_expense_id_seq'::regclass);"
    - "ALTER TABLE ONLY public.employee_certification ALTER COLUMN certification_id SET DEFAULT nextval('public.employee_certification_certification_id_seq'::regclass);"
    - "ALTER TABLE ONLY public.employee_computer ALTER COLUMN computer_id SET DEFAULT nextval('public.employee_computer_computer_id_seq'::regclass);"
    - "ALTER TABLE ONLY public.employee_termination ALTER COLUMN termination_id SET DEFAULT nextval('public.employee_termination_termination_id_seq'::regclass);"
    - "ALTER TABLE ONLY public.employee_travel ALTER COLUMN travel_id SET DEFAULT nextval('public.employee_travel_travel_id_seq'::regclass);"
    - "ALTER TABLE ONLY public.invoice ALTER COLUMN invoice_id SET DEFAULT nextval('public.invoice_invoice_id_seq'::regclass);"
    - "ALTER TABLE ONLY public.job ALTER COLUMN job_id SET DEFAULT nextval('public.job_job_id_seq'::regclass);"
    - "ALTER TABLE ONLY public.job_history ALTER COLUMN job_history_id SET DEFAULT nextval('public.job_history_job_history_id_seq'::regclass);"
    - "ALTER TABLE ONLY public.leave_request ALTER COLUMN leave_id SET DEFAULT nextval('public.leave_request_leave_id_seq'::regclass);"
    - "ALTER TABLE ONLY public.manager ALTER COLUMN manager_id SET DEFAULT nextval('public.manager_manager_id_seq'::regclass);"
    - "ALTER TABLE ONLY public.payment ALTER COLUMN payment_id SET DEFAULT nextval('public.payment_payment_id_seq'::regclass);"
    - "ALTER TABLE ONLY public.performance_review ALTER COLUMN review_id SET DEFAULT nextval('public.performance_review_review_id_seq'::regclass);"
    - "ALTER TABLE ONLY public.salary ALTER COLUMN salary_id SET DEFAULT nextval('public.salary_salary_id_seq'::regclass);"
    - "ALTER TABLE ONLY public.timesheet ALTER COLUMN timesheet_id SET DEFAULT nextval('public.timesheet_timesheet_id_seq'::regclass);"
    - "ALTER TABLE ONLY public.training ALTER COLUMN training_id SET DEFAULT nextval('public.training_training_id_seq'::regclass);"
    - "DO $$ BEGIN IF NOT EXISTS (SELECT 1 FROM pg_roles WHERE rolname = 'tmp_dql') THEN EXECUTE 'CREATE USER tmp_dql'; END IF; END $$;"
    - "GRANT USAGE ON SCHEMA public TO tmp_dql;"
    - "GRANT SELECT ON ALL TABLES IN SCHEMA public TO tmp_dql;"
    - "DO $$ BEGIN IF NOT EXISTS (SELECT 1 FROM pg_roles WHERE rolname = 'tmp_dml') THEN EXECUTE 'CREATE USER tmp_dml'; END IF; END $$;"
    - "GRANT USAGE ON SCHEMA public TO tmp_dml;"
    - "GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO tmp_dml;"
    mysql:
    - 'CREATE USER IF NOT EXISTS "tmp_dql"@"%";'
    - 'GRANT USAGE ON *.* TO "tmp_dql"@"%";'
    - 'GRANT SELECT ON `db_hr`.* TO "tmp_dql"@"%";'
    - 'FLUSH PRIVILEGES;'
    - 'CREATE USER IF NOT EXISTS "tmp_dml"@"%";'
    - 'GRANT USAGE ON *.* TO "tmp_dml"@"%";'
    - 'GRANT SELECT, INSERT, UPDATE, DELETE ON `db_hr`.* TO "tmp_dml"@"%";'
    - 'FLUSH PRIVILEGES;'

  post_setup:
    postgres:
    - "SELECT pg_catalog.setval('public.allowances_allowance_id_seq', 1, false);"
    - "SELECT pg_catalog.setval('public.attendance_attendance_id_seq', 1, false);"
    - "SELECT pg_catalog.setval('public.benefit_benefit_id_seq', 1, false);"
    - "SELECT pg_catalog.setval('public.company_company_id_seq', 20, true);"
    - "SELECT pg_catalog.setval('public.department_department_id_seq', 20, true);"
    - "SELECT pg_catalog.setval('public.employee_allowances_employee_allowance_id_seq', 20, true);"
    - "SELECT pg_catalog.setval('public.employee_business_expense_expense_id_seq', 20, true);"
    - "SELECT pg_catalog.setval('public.employee_certification_certification_id_seq', 20, true);"
    - "SELECT pg_catalog.setval('public.employee_computer_computer_id_seq', 20, true);"
    - "SELECT pg_catalog.setval('public.employee_employee_id_seq', 1, false);"
    - "SELECT pg_catalog.setval('public.employee_termination_termination_id_seq', 1, true);"
    - "SELECT pg_catalog.setval('public.employee_travel_travel_id_seq', 1, false);"
    - "SELECT pg_catalog.setval('public.invoice_invoice_id_seq', 1, false);"
    - "SELECT pg_catalog.setval('public.job_history_job_history_id_seq', 1, false);"
    - "SELECT pg_catalog.setval('public.job_job_id_seq', 1, false);"
    - "SELECT pg_catalog.setval('public.leave_request_leave_id_seq', 1, false);"
    - "SELECT pg_catalog.setval('public.manager_manager_id_seq', 1, false);"
    - "SELECT pg_catalog.setval('public.payment_payment_id_seq', 1, false);"
    - "SELECT pg_catalog.setval('public.performance_review_review_id_seq', 1, false);"
    - "SELECT pg_catalog.setval('public.salary_salary_id_seq', 1, false);"
    - "SELECT pg_catalog.setval('public.timesheet_timesheet_id_seq', 1, false);"
    - "SELECT pg_catalog.setval('public.training_training_id_seq', 1, false);"
    - "ALTER TABLE ONLY public.allowances ADD CONSTRAINT allowances_pkey PRIMARY KEY (allowance_id);"
    - "ALTER TABLE ONLY public.attendance ADD CONSTRAINT attendance_pkey PRIMARY KEY (attendance_id);"
    - "ALTER TABLE ONLY public.benefit ADD CONSTRAINT benefit_pkey PRIMARY KEY (benefit_id);"
    - "ALTER TABLE ONLY public.company ADD CONSTRAINT company_pkey PRIMARY KEY (company_id);"
    - "ALTER TABLE ONLY public.department ADD CONSTRAINT department_pkey PRIMARY KEY (department_id);"
    - "ALTER TABLE ONLY public.employee_allowances ADD CONSTRAINT employee_allowances_pkey PRIMARY KEY (employee_allowance_id);"
    - "ALTER TABLE ONLY public.employee_business_expense ADD CONSTRAINT employee_business_expense_pkey PRIMARY KEY (expense_id);"
    - "ALTER TABLE ONLY public.employee_certification ADD CONSTRAINT employee_certification_pkey PRIMARY KEY (certification_id);"
    - "ALTER TABLE ONLY public.employee_computer ADD CONSTRAINT employee_computer_pkey PRIMARY KEY (computer_id);"
    - "ALTER TABLE ONLY public.employee ADD CONSTRAINT employee_pkey PRIMARY KEY (employee_id);"
    - "ALTER TABLE ONLY public.employee_termination ADD CONSTRAINT employee_termination_pkey PRIMARY KEY (termination_id);"
    - "ALTER TABLE ONLY public.employee_travel ADD CONSTRAINT employee_travel_pkey PRIMARY KEY (travel_id);"
    - "ALTER TABLE ONLY public.holiday ADD CONSTRAINT holiday_pkey PRIMARY KEY (date, city, project);"
    - "ALTER TABLE ONLY public.invoice ADD CONSTRAINT invoice_pkey PRIMARY KEY (invoice_id);"
    - "ALTER TABLE ONLY public.job_history ADD CONSTRAINT job_history_pkey PRIMARY KEY (job_history_id);"
    - "ALTER TABLE ONLY public.job ADD CONSTRAINT job_pkey PRIMARY KEY (job_id);"
    - "ALTER TABLE ONLY public.leave_request ADD CONSTRAINT leave_request_pkey PRIMARY KEY (leave_id);"
    - "ALTER TABLE ONLY public.manager ADD CONSTRAINT manager_pkey PRIMARY KEY (manager_id);"
    - "ALTER TABLE ONLY public.payment ADD CONSTRAINT payment_pkey PRIMARY KEY (payment_id);"
    - "ALTER TABLE ONLY public.performance_review ADD CONSTRAINT performance_review_pkey PRIMARY KEY (review_id);"
    - "ALTER TABLE ONLY public.salary ADD CONSTRAINT salary_pkey PRIMARY KEY (salary_id);"
    - "ALTER TABLE ONLY public.timesheet_employee ADD CONSTRAINT timesheet_employee_pkey PRIMARY KEY (timesheet_id);"
    - "ALTER TABLE ONLY public.timesheet ADD CONSTRAINT timesheet_pkey PRIMARY KEY (timesheet_id);"
    - "ALTER TABLE ONLY public.training ADD CONSTRAINT training_pkey PRIMARY KEY (training_id);"
    - "ALTER TABLE ONLY public.attendance ADD CONSTRAINT fk_attendance_employee FOREIGN KEY (employee_id) REFERENCES public.employee(employee_id);"
    - "ALTER TABLE ONLY public.department ADD CONSTRAINT fk_department_company FOREIGN KEY (company_id) REFERENCES public.company(company_id);"
    - "ALTER TABLE ONLY public.department ADD CONSTRAINT fk_department_manager FOREIGN KEY (manager_id) REFERENCES public.employee(employee_id);"
    - "ALTER TABLE ONLY public.employee_allowances ADD CONSTRAINT fk_employee_allowances_allowances FOREIGN KEY (allowance_id) REFERENCES public.allowances(allowance_id);"
    - "ALTER TABLE ONLY public.employee_allowances ADD CONSTRAINT fk_employee_allowances_employee FOREIGN KEY (employee_id) REFERENCES public.employee(employee_id);"
    - "ALTER TABLE ONLY public.employee_business_expense ADD CONSTRAINT fk_employee_business_expense_employee FOREIGN KEY (employee_id) REFERENCES public.employee(employee_id);"
    - "ALTER TABLE ONLY public.employee_certification ADD CONSTRAINT fk_employee_certification_employee FOREIGN KEY (employee_id) REFERENCES public.employee(employee_id);"
    - "ALTER TABLE ONLY public.employee ADD CONSTRAINT fk_employee_company FOREIGN KEY (company_id) REFERENCES public.company(company_id);"
    - "ALTER TABLE ONLY public.employee_computer ADD CONSTRAINT fk_employee_computer_employee FOREIGN KEY (employee_id) REFERENCES public.employee(employee_id);"
    - "ALTER TABLE ONLY public.employee ADD CONSTRAINT fk_employee_department FOREIGN KEY (department_id) REFERENCES public.department(department_id);"
    - "ALTER TABLE ONLY public.employee ADD CONSTRAINT fk_employee_job FOREIGN KEY (job_id) REFERENCES public.job(job_id);"
    - "ALTER TABLE ONLY public.employee ADD CONSTRAINT fk_employee_manager FOREIGN KEY (manager_id) REFERENCES public.manager(manager_id);"
    - "ALTER TABLE ONLY public.employee_termination ADD CONSTRAINT fk_employee_termination_employee FOREIGN KEY (employee_id) REFERENCES public.employee(employee_id);"
    - "ALTER TABLE ONLY public.employee_training ADD CONSTRAINT fk_employee_training_employee FOREIGN KEY (employee_id) REFERENCES public.employee(employee_id);"
    - "ALTER TABLE ONLY public.employee_training ADD CONSTRAINT fk_employee_training_training FOREIGN KEY (training_id) REFERENCES public.training(training_id);"
    - "ALTER TABLE ONLY public.employee_travel ADD CONSTRAINT fk_employee_travel_employee FOREIGN KEY (employee_id) REFERENCES public.employee(employee_id);"
    - "ALTER TABLE ONLY public.employee_x_benefit ADD CONSTRAINT fk_employee_x_benefit_benefit FOREIGN KEY (benefit_id) REFERENCES public.benefit(benefit_id);"
    - "ALTER TABLE ONLY public.employee_x_benefit ADD CONSTRAINT fk_employee_x_benefit_employee FOREIGN KEY (employee_id) REFERENCES public.employee(employee_id);"
    - "ALTER TABLE ONLY public.invoice ADD CONSTRAINT fk_invoice_employee FOREIGN KEY (employee_id) REFERENCES public.employee(employee_id);"
    - "ALTER TABLE ONLY public.job ADD CONSTRAINT fk_job_department FOREIGN KEY (department_id) REFERENCES public.department(department_id);"
    - "ALTER TABLE ONLY public.job_history ADD CONSTRAINT fk_job_history_department FOREIGN KEY (department_id) REFERENCES public.department(department_id);"
    - "ALTER TABLE ONLY public.job_history ADD CONSTRAINT fk_job_history_employee FOREIGN KEY (employee_id) REFERENCES public.employee(employee_id);"
    - "ALTER TABLE ONLY public.job_history ADD CONSTRAINT fk_job_history_job FOREIGN KEY (job_id) REFERENCES public.job(job_id);"
    - "ALTER TABLE ONLY public.leave_request ADD CONSTRAINT fk_leave_request_employee FOREIGN KEY (employee_id) REFERENCES public.employee(employee_id);"
    - "ALTER TABLE ONLY public.leave_request ADD CONSTRAINT fk_leave_request_manager FOREIGN KEY (processed_by) REFERENCES public.manager(manager_id);"
    - "ALTER TABLE ONLY public.manager ADD CONSTRAINT fk_manager_employee FOREIGN KEY (manager_id) REFERENCES public.employee(employee_id);"
    - "ALTER TABLE ONLY public.payment ADD CONSTRAINT fk_payment_invoice FOREIGN KEY (invoice_id) REFERENCES public.invoice(invoice_id);"
    - "ALTER TABLE ONLY public.performance_review ADD CONSTRAINT fk_performance_review_employee FOREIGN KEY (employee_id) REFERENCES public.employee(employee_id);"
    - "ALTER TABLE ONLY public.performance_review ADD CONSTRAINT fk_performance_review_reviewer FOREIGN KEY (reviewer_id) REFERENCES public.employee(employee_id);"
    - "ALTER TABLE ONLY public.salary ADD CONSTRAINT fk_salary_employee FOREIGN KEY (employee_id) REFERENCES public.employee(employee_id);"
    - "ALTER TABLE ONLY public.timesheet_employee ADD CONSTRAINT fk_timesheet_employee_employee FOREIGN KEY (employee_id) REFERENCES public.employee(employee_id);"
    - "ALTER TABLE ONLY public.timesheet_employee ADD CONSTRAINT fk_timesheet_employee_timesheet FOREIGN KEY (timesheet_id) REFERENCES public.timesheet(timesheet_id);"
    mysql: []
  post_data_insertion_checks:
    postgres:
    - "SELECT 'allowances' AS table_name, MD5(STRING_AGG(t, ',' ORDER BY t)) AS checksum FROM (SELECT MD5(ROW_TO_JSON(ROW(t.*))::TEXT) AS t FROM public.allowances t) AS row_hashes"
    - "SELECT 'attendance' AS table_name, MD5(STRING_AGG(t, ',' ORDER BY t)) AS checksum FROM (SELECT MD5(ROW_TO_JSON(ROW(t.*))::TEXT) AS t FROM public.attendance t) AS row_hashes"
    - "SELECT 'benefit' AS table_name, MD5(STRING_AGG(t, ',' ORDER BY t)) AS checksum FROM (SELECT MD5(ROW_TO_JSON(ROW(t.*))::TEXT) AS t FROM public.benefit t) AS row_hashes"
    - "SELECT 'company' AS table_name, MD5(STRING_AGG(t, ',' ORDER BY t)) AS checksum FROM (SELECT MD5(ROW_TO_JSON(ROW(t.*))::TEXT) AS t FROM public.company t) AS row_hashes"
    - "SELECT 'department' AS table_name, MD5(STRING_AGG(t, ',' ORDER BY t)) AS checksum FROM (SELECT MD5(ROW_TO_JSON(ROW(t.*))::TEXT) AS t FROM public.department t) AS row_hashes"
    - "SELECT 'employee' AS table_name, MD5(STRING_AGG(t, ',' ORDER BY t)) AS checksum FROM (SELECT MD5(ROW_TO_JSON(ROW(t.*))::TEXT) AS t FROM public.employee t) AS row_hashes"
    - "SELECT 'employee_allowances' AS table_name, MD5(STRING_AGG(t, ',' ORDER BY t)) AS checksum FROM (SELECT MD5(ROW_TO_JSON(ROW(t.*))::TEXT) AS t FROM public.employee_allowances t) AS row_hashes"
    - "SELECT 'employee_business_expense' AS table_name, MD5(STRING_AGG(t, ',' ORDER BY t)) AS checksum FROM (SELECT MD5(ROW_TO_JSON(ROW(t.*))::TEXT) AS t FROM public.employee_business_expense t) AS row_hashes"
    - "SELECT 'employee_certification' AS table_name, MD5(STRING_AGG(t, ',' ORDER BY t)) AS checksum FROM (SELECT MD5(ROW_TO_JSON(ROW(t.*))::TEXT) AS t FROM public.employee_certification t) AS row_hashes"
    - "SELECT 'employee_computer' AS table_name, MD5(STRING_AGG(t, ',' ORDER BY t)) AS checksum FROM (SELECT MD5(ROW_TO_JSON(ROW(t.*))::TEXT) AS t FROM public.employee_computer t) AS row_hashes"
    - "SELECT 'employee_termination' AS table_name, MD5(STRING_AGG(t, ',' ORDER BY t)) AS checksum FROM (SELECT MD5(ROW_TO_JSON(ROW(t.*))::TEXT) AS t FROM public.employee_termination t) AS row_hashes"
    - "SELECT 'employee_training' AS table_name, MD5(STRING_AGG(t, ',' ORDER BY t)) AS checksum FROM (SELECT MD5(ROW_TO_JSON(ROW(t.*))::TEXT) AS t FROM public.employee_training t) AS row_hashes"
    - "SELECT 'employee_travel' AS table_name, MD5(STRING_AGG(t, ',' ORDER BY t)) AS checksum FROM (SELECT MD5(ROW_TO_JSON(ROW(t.*))::TEXT) AS t FROM public.employee_travel t) AS row_hashes"
    - "SELECT 'employee_x_benefit' AS table_name, MD5(STRING_AGG(t, ',' ORDER BY t)) AS checksum FROM (SELECT MD5(ROW_TO_JSON(ROW(t.*))::TEXT) AS t FROM public.employee_x_benefit t) AS row_hashes"
    - "SELECT 'holiday' AS table_name, MD5(STRING_AGG(t, ',' ORDER BY t)) AS checksum FROM (SELECT MD5(ROW_TO_JSON(ROW(t.*))::TEXT) AS t FROM public.holiday t) AS row_hashes"
    - "SELECT 'invoice' AS table_name, MD5(STRING_AGG(t, ',' ORDER BY t)) AS checksum FROM (SELECT MD5(ROW_TO_JSON(ROW(t.*))::TEXT) AS t FROM public.invoice t) AS row_hashes"
    - "SELECT 'job' AS table_name, MD5(STRING_AGG(t, ',' ORDER BY t)) AS checksum FROM (SELECT MD5(ROW_TO_JSON(ROW(t.*))::TEXT) AS t FROM public.job t) AS row_hashes"
    - "SELECT 'job_history' AS table_name, MD5(STRING_AGG(t, ',' ORDER BY t)) AS checksum FROM (SELECT MD5(ROW_TO_JSON(ROW(t.*))::TEXT) AS t FROM public.job_history t) AS row_hashes"
    - "SELECT 'leave_request' AS table_name, MD5(STRING_AGG(t, ',' ORDER BY t)) AS checksum FROM (SELECT MD5(ROW_TO_JSON(ROW(t.*))::TEXT) AS t FROM public.leave_request t) AS row_hashes"
    - "SELECT 'manager' AS table_name, MD5(STRING_AGG(t, ',' ORDER BY t)) AS checksum FROM (SELECT MD5(ROW_TO_JSON(ROW(t.*))::TEXT) AS t FROM public.manager t) AS row_hashes"
    - "SELECT 'payment' AS table_name, MD5(STRING_AGG(t, ',' ORDER BY t)) AS checksum FROM (SELECT MD5(ROW_TO_JSON(ROW(t.*))::TEXT) AS t FROM public.payment t) AS row_hashes"
    - "SELECT 'performance_review' AS table_name, MD5(STRING_AGG(t, ',' ORDER BY t)) AS checksum FROM (SELECT MD5(ROW_TO_JSON(ROW(t.*))::TEXT) AS t FROM public.performance_review t) AS row_hashes"
    - "SELECT 'salary' AS table_name, MD5(STRING_AGG(t, ',' ORDER BY t)) AS checksum FROM (SELECT MD5(ROW_TO_JSON(ROW(t.*))::TEXT) AS t FROM public.salary t) AS row_hashes"
    - "SELECT 'timesheet' AS table_name, MD5(STRING_AGG(t, ',' ORDER BY t)) AS checksum FROM (SELECT MD5(ROW_TO_JSON(ROW(t.*))::TEXT) AS t FROM public.timesheet t) AS row_hashes"
    - "SELECT 'timesheet_employee' AS table_name, MD5(STRING_AGG(t, ',' ORDER BY t)) AS checksum FROM (SELECT MD5(ROW_TO_JSON(ROW(t.*))::TEXT) AS t FROM public.timesheet_employee t) AS row_hashes"
    - "SELECT 'training' AS table_name, MD5(STRING_AGG(t, ',' ORDER BY t)) AS checksum FROM (SELECT MD5(ROW_TO_JSON(ROW(t.*))::TEXT) AS t FROM public.training t) AS row_hashes"
    - "SELECT 'tables' AS metadata_type, MD5(STRING_AGG(MD5(ordered_tables.table_name::TEXT), ',')) AS checksum FROM (SELECT table_name FROM information_schema.tables WHERE table_schema='public' AND table_type='BASE TABLE' ORDER BY table_name) AS ordered_tables"
    - "SELECT 'columns' AS metadata_type, MD5(STRING_AGG(MD5(ROW(ordered_columns.table_name, ordered_columns.column_name, ordered_columns.data_type)::TEXT), ',')) AS checksum FROM (SELECT TABLE_NAME, COLUMN_NAME, udt_name AS DATA_TYPE FROM information_schema.columns WHERE table_schema = 'public' ORDER BY TABLE_NAME, COLUMN_NAME, DATA_TYPE) AS ordered_columns"
    - "SELECT 'primary_keys' AS metadata_type, MD5(STRING_AGG(MD5(ROW(ordered_pks.table_name, ordered_pks.column_name)::TEXT), ',')) AS checksum FROM (SELECT tc.table_name, kcu.column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name WHERE tc.constraint_type = 'PRIMARY KEY' AND tc.table_schema = 'public' ORDER BY tc.table_name, kcu.column_name) AS ordered_pks"
    - "SELECT 'foreign_keys' AS metadata_type, MD5(STRING_AGG(MD5(ROW(ordered_fks.constraint_name, ordered_fks.table_name, ordered_fks.column_name, ordered_fks.foreign_table_name, ordered_fks.foreign_column_name)::TEXT), ',')) AS checksum FROM (SELECT c.conname AS constraint_name, c.conrelid::regclass::text AS table_name, a.attname AS column_name, c.confrelid::regclass::text AS foreign_table_name, af.attname AS foreign_column_name FROM pg_constraint AS c JOIN pg_attribute AS a ON a.attnum = ANY(c.conkey) AND a.attrelid = c.conrelid JOIN pg_attribute AS af ON af.attnum = ANY(c.confkey) AND af.attrelid = c.confrelid WHERE c.contype = 'f' ORDER BY constraint_name, table_name, column_name, foreign_table_name, foreign_column_name) AS ordered_fks"
    - "SELECT 'indexes' AS metadata_type, MD5(STRING_AGG(MD5(ROW(ordered_indexes.tablename, ordered_indexes.indexname, ordered_indexes.indexdef)::TEXT), ',')) AS checksum FROM (SELECT tablename, indexname, indexdef FROM pg_indexes WHERE schemaname = 'public' ORDER BY tablename, indexname, indexdef) AS ordered_indexes"
    mysql:
    - "SELECT 'allowances' AS table_name, MD5(GROUP_CONCAT(CONCAT_WS(',', `allowance`,`allowance_description`,`allowance_id`) ORDER BY `allowance`,`allowance_description`,`allowance_id`)) AS checksum FROM db_hr.allowances"
    - "SELECT 'attendance' AS table_name, MD5(GROUP_CONCAT(CONCAT_WS(',', `attendance_id`,`check_in_location`,`check_in_method`,`check_in_time`,`check_out_location`,`check_out_method`,`check_out_time`,`date`,`employee_id`,`notes`,`overtime_hours`,`shift`,`work_hours`) ORDER BY `attendance_id`,`check_in_location`,`check_in_method`,`check_in_time`,`check_out_location`,`check_out_method`,`check_out_time`,`date`,`employee_id`,`notes`,`overtime_hours`,`shift`,`work_hours`)) AS checksum FROM db_hr.attendance"
    - "SELECT 'benefit' AS table_name, MD5(GROUP_CONCAT(CONCAT_WS(',', `benefit_id`,`benefit_name`,`contact_info`,`coverage`,`description`,`eligibility_criteria`,`end_date`,`provider`,`start_date`,`usage_instructions`) ORDER BY `benefit_id`,`benefit_name`,`contact_info`,`coverage`,`description`,`eligibility_criteria`,`end_date`,`provider`,`start_date`,`usage_instructions`)) AS checksum FROM db_hr.benefit"
    - "SELECT 'company' AS table_name, MD5(GROUP_CONCAT(CONCAT_WS(',', `clients`,`company_id`,`company_name`,`competitors`,`contact_email`,`contact_person`,`contact_phone`,`financial_year_end`,`founded_date`,`industry`,`location`,`ownership_type`,`partners`,`products`,`size`,`social_media_facebook`,`social_media_instagram`,`social_media_linkedin`,`social_media_x`,`website`) ORDER BY `clients`,`company_id`,`company_name`,`competitors`,`contact_email`,`contact_person`,`contact_phone`,`financial_year_end`,`founded_date`,`industry`,`location`,`ownership_type`,`partners`,`products`,`size`,`social_media_facebook`,`social_media_instagram`,`social_media_linkedin`,`social_media_x`,`website`)) AS checksum FROM db_hr.company"
    - "SELECT 'department' AS table_name, MD5(GROUP_CONCAT(CONCAT_WS(',', `achievements`,`budget`,`company_id`,`department_id`,`department_name`,`end_date`,`goals`,`is_active`,`manager_id`,`start_date`) ORDER BY `achievements`,`budget`,`company_id`,`department_id`,`department_name`,`end_date`,`goals`,`is_active`,`manager_id`,`start_date`)) AS checksum FROM db_hr.department"
    - "SELECT 'employee' AS table_name, MD5(GROUP_CONCAT(CONCAT_WS(',', `address`,`bank_account_number`,`company_id`,`contract_type`,`date_of_birth`,`department_id`,`email`,`emergency_contact_name`,`emergency_contact_number`,`employee_id`,`first_name`,`gender`,`hire_date`,`image_url`,`job_id`,`last_name`,`manager_id`,`marital_status`,`national_identification`,`phone_number`) ORDER BY `address`,`bank_account_number`,`company_id`,`contract_type`,`date_of_birth`,`department_id`,`email`,`emergency_contact_name`,`emergency_contact_number`,`employee_id`,`first_name`,`gender`,`hire_date`,`image_url`,`job_id`,`last_name`,`manager_id`,`marital_status`,`national_identification`,`phone_number`)) AS checksum FROM db_hr.employee"
    - "SELECT 'employee_allowances' AS table_name, MD5(GROUP_CONCAT(CONCAT_WS(',', `allowance_id`,`amount`,`date_created`,`effective_date`,`employee_allowance_id`,`employee_id`,`type`) ORDER BY `allowance_id`,`amount`,`date_created`,`effective_date`,`employee_allowance_id`,`employee_id`,`type`)) AS checksum FROM db_hr.employee_allowances"
    - "SELECT 'employee_business_expense' AS table_name, MD5(GROUP_CONCAT(CONCAT_WS(',', `employee_id`,`expense_amount`,`expense_category`,`expense_date`,`expense_description`,`expense_id`,`expense_receipt`) ORDER BY `employee_id`,`expense_amount`,`expense_category`,`expense_date`,`expense_description`,`expense_id`,`expense_receipt`)) AS checksum FROM db_hr.employee_business_expense"
    - "SELECT 'employee_certification' AS table_name, MD5(GROUP_CONCAT(CONCAT_WS(',', `certification_id`,`certification_name`,`employee_id`,`expiration_date`,`issue_date`,`issuing_organization`) ORDER BY `certification_id`,`certification_name`,`employee_id`,`expiration_date`,`issue_date`,`issuing_organization`)) AS checksum FROM db_hr.employee_certification"
    - "SELECT 'employee_computer' AS table_name, MD5(GROUP_CONCAT(CONCAT_WS(',', `assigned_date`,`computer_id`,`computer_name`,`employee_id`,`model`,`purchase_date`,`returned_date`,`serial_number`,`status`,`warranty_expiry_date`) ORDER BY `assigned_date`,`computer_id`,`computer_name`,`employee_id`,`model`,`purchase_date`,`returned_date`,`serial_number`,`status`,`warranty_expiry_date`)) AS checksum FROM db_hr.employee_computer"
    - "SELECT 'employee_termination' AS table_name, MD5(GROUP_CONCAT(CONCAT_WS(',', `description`,`employee_id`,`reason`,`termination_date`,`termination_id`) ORDER BY `description`,`employee_id`,`reason`,`termination_date`,`termination_id`)) AS checksum FROM db_hr.employee_termination"
    - "SELECT 'employee_training' AS table_name, MD5(GROUP_CONCAT(CONCAT_WS(',', `employee_id`,`end_date`,`start_date`,`training_id`) ORDER BY `employee_id`,`end_date`,`start_date`,`training_id`)) AS checksum FROM db_hr.employee_training"
    - "SELECT 'employee_travel' AS table_name, MD5(GROUP_CONCAT(CONCAT_WS(',', `employee_id`,`travel_destination`,`travel_end_date`,`travel_expenses`,`travel_id`,`travel_purpose`,`travel_start_date`) ORDER BY `employee_id`,`travel_destination`,`travel_end_date`,`travel_expenses`,`travel_id`,`travel_purpose`,`travel_start_date`)) AS checksum FROM db_hr.employee_travel"
    - "SELECT 'employee_x_benefit' AS table_name, MD5(GROUP_CONCAT(CONCAT_WS(',', `benefit_id`,`employee_id`,`end_date`,`start_date`) ORDER BY `benefit_id`,`employee_id`,`end_date`,`start_date`)) AS checksum FROM db_hr.employee_x_benefit"
    - "SELECT 'holiday' AS table_name, MD5(GROUP_CONCAT(CONCAT_WS(',', `City`,`Date`,`Day`,`Geographic_location`,`Occasion`,`Project`) ORDER BY `City`,`Date`,`Day`,`Geographic_location`,`Occasion`,`Project`)) AS checksum FROM db_hr.holiday"
    - "SELECT 'invoice' AS table_name, MD5(GROUP_CONCAT(CONCAT_WS(',', `due_date`,`employee_id`,`invoice_date`,`invoice_id`,`status`,`total_amount`) ORDER BY `due_date`,`employee_id`,`invoice_date`,`invoice_id`,`status`,`total_amount`)) AS checksum FROM db_hr.invoice"
    - "SELECT 'job' AS table_name, MD5(GROUP_CONCAT(CONCAT_WS(',', `benefits`,`department_id`,`education_requirements`,`employment_type`,`experience_requirements`,`job_description`,`job_id`,`job_title`,`location`,`max_salary`,`min_salary`,`responsibilities`,`skills_preferred`,`skills_required`,`status`,`vacancies`) ORDER BY `benefits`,`department_id`,`education_requirements`,`employment_type`,`experience_requirements`,`job_description`,`job_id`,`job_title`,`location`,`max_salary`,`min_salary`,`responsibilities`,`skills_preferred`,`skills_required`,`status`,`vacancies`)) AS checksum FROM db_hr.job"
    - "SELECT 'job_history' AS table_name, MD5(GROUP_CONCAT(CONCAT_WS(',', `department_id`,`employee_id`,`end_date`,`job_history_id`,`job_id`,`start_date`) ORDER BY `department_id`,`employee_id`,`end_date`,`job_history_id`,`job_id`,`start_date`)) AS checksum FROM db_hr.job_history"
    - "SELECT 'leave_request' AS table_name, MD5(GROUP_CONCAT(CONCAT_WS(',', `approval_date`,`attachment`,`comments`,`duration`,`employee_id`,`end_date`,`leave_id`,`leave_type`,`processed_by`,`reason`,`rejection_date`,`start_date`,`status`) ORDER BY `approval_date`,`attachment`,`comments`,`duration`,`employee_id`,`end_date`,`leave_id`,`leave_type`,`processed_by`,`reason`,`rejection_date`,`start_date`,`status`)) AS checksum FROM db_hr.leave_request"
    - "SELECT 'manager' AS table_name, MD5(GROUP_CONCAT(CONCAT_WS(',', `end_date`,`manager_id`,`start_date`) ORDER BY `end_date`,`manager_id`,`start_date`)) AS checksum FROM db_hr.manager"
    - "SELECT 'payment' AS table_name, MD5(GROUP_CONCAT(CONCAT_WS(',', `amount`,`invoice_id`,`payment_date`,`payment_id`,`payment_method`) ORDER BY `amount`,`invoice_id`,`payment_date`,`payment_id`,`payment_method`)) AS checksum FROM db_hr.payment"
    - "SELECT 'performance_review' AS table_name, MD5(GROUP_CONCAT(CONCAT_WS(',', `comments`,`employee_id`,`performance_rating`,`review_date`,`review_id`,`reviewer_id`) ORDER BY `comments`,`employee_id`,`performance_rating`,`review_date`,`review_id`,`reviewer_id`)) AS checksum FROM db_hr.performance_review"
    - "SELECT 'salary' AS table_name, MD5(GROUP_CONCAT(CONCAT_WS(',', `bonus`,`currency`,`deductions`,`employee_id`,`end_date`,`pay_frequency`,`salary`,`salary_id`,`start_date`,`status`,`taxes`,`total_compensation`) ORDER BY `bonus`,`currency`,`deductions`,`employee_id`,`end_date`,`pay_frequency`,`salary`,`salary_id`,`start_date`,`status`,`taxes`,`total_compensation`)) AS checksum FROM db_hr.salary"
    - "SELECT 'timesheet' AS table_name, MD5(GROUP_CONCAT(CONCAT_WS(',', `Date`,`Leave_type`,`Overtime`,`timesheet_id`,`Working_hours`) ORDER BY `Date`,`Leave_type`,`Overtime`,`timesheet_id`,`Working_hours`)) AS checksum FROM db_hr.timesheet"
    - "SELECT 'timesheet_employee' AS table_name, MD5(GROUP_CONCAT(CONCAT_WS(',', `employee_id`,`Fort_Night1_flag`,`Fort_Night2_flag`,`Month`,`timesheet_id`,`Year`) ORDER BY `employee_id`,`Fort_Night1_flag`,`Fort_Night2_flag`,`Month`,`timesheet_id`,`Year`)) AS checksum FROM db_hr.timesheet_employee"
    - "SELECT 'training' AS table_name, MD5(GROUP_CONCAT(CONCAT_WS(',', `attendance_required`,`date`,`description`,`duration`,`feedback_link`,`link`,`location`,`materials`,`registration_deadline_date`,`registration_link`,`status`,`title`,`trainer`,`training_id`) ORDER BY `attendance_required`,`date`,`description`,`duration`,`feedback_link`,`link`,`location`,`materials`,`registration_deadline_date`,`registration_link`,`status`,`title`,`trainer`,`training_id`)) AS checksum FROM db_hr.training"
    - "SELECT 'tables' AS metadata_type, MD5(GROUP_CONCAT(MD5(ordered_tables.table_name) ORDER BY ordered_tables.table_name SEPARATOR ',')) AS checksum FROM (SELECT ist.table_name FROM information_schema.tables AS ist WHERE ist.table_schema = 'db_hr' ORDER BY ist.table_name) AS ordered_tables"
    - "SELECT 'columns' AS metadata_type, MD5(GROUP_CONCAT(MD5(CONCAT(ordered_columns.table_name, ':', ordered_columns.column_name, ':', ordered_columns.data_type)) SEPARATOR ',')) AS checksum FROM (SELECT TABLE_NAME, COLUMN_NAME, DATA_TYPE FROM information_schema.columns WHERE table_schema = 'db_hr' ORDER BY TABLE_NAME, COLUMN_NAME, DATA_TYPE) AS ordered_columns"
    - "SELECT 'primary_keys' AS metadata_type, MD5(GROUP_CONCAT(MD5(CONCAT(ordered_pks.table_name, ':', ordered_pks.column_name)) SEPARATOR ',')) AS checksum FROM (SELECT TABLE_NAME, COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = 'db_hr' AND COLUMN_KEY = 'PRI' ORDER BY TABLE_NAME, COLUMN_NAME) AS ordered_pks"
    - "SELECT 'foreign_keys' AS metadata_type, MD5(GROUP_CONCAT(MD5(CONCAT(ordered_fks.table_name, ':', ordered_fks.column_name, ':', ordered_fks.constraint_name, ':', ordered_fks.referenced_table_name, ':', ordered_fks.referenced_column_name)) SEPARATOR ',')) AS checksum FROM (SELECT TABLE_NAME,COLUMN_NAME,CONSTRAINT_NAME, REFERENCED_TABLE_NAME,REFERENCED_COLUMN_NAME FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE WHERE REFERENCED_TABLE_SCHEMA = 'db_hr' ORDER BY TABLE_NAME, COLUMN_NAME, CONSTRAINT_NAME, REFERENCED_TABLE_NAME, REFERENCED_COLUMN_NAME) AS ordered_fks"
    - "SELECT 'indexes' AS metadata_type, MD5(GROUP_CONCAT(MD5(CONCAT(ordered_indexes.table_name, ':', ordered_indexes.index_name)) SEPARATOR ',')) AS checksum FROM (SELECT TABLE_NAME, INDEX_NAME FROM INFORMATION_SCHEMA.STATISTICS WHERE TABLE_SCHEMA = 'db_hr' Order by TABLE_NAME, INDEX_NAME) AS ordered_indexes"
